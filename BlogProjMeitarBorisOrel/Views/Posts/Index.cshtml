@model IEnumerable<BlogProjMeitarBorisOrel.Models.Post>

@{
    ViewData["Title"] = "Index";
}

<h2>Posts</h2>

<p>
    <a asp-action="Create">Write a new post</a>
</p>

@using (Html.BeginForm())
{
    <p>
        Find by Title: @Html.TextBox("SearchString")
        Author Name: @Html.TextBox("SearchString2")
        Text: @Html.TextBox("SearchString3")
        <input type="submit" value="Search" />

        <select name="gBy">
            <option value="">No Group</option>
            <option value="Aname">Author Name</option>
            <option value="title">Title</option>
        </select>

        <input type="submit" value="Group By" />

        <select name="jBy">
            <option value="">No Join</option>
            <option value="category">Categories</option>
            <option value="comment">Comments</option>

        </select>
        <input type="submit" value="Join By" />
        <select name="oBy">
            <option value="">No Order</option>
            <option value="title">Title</option>
            <option value="author">Author_Name</option>

        </select>

        <input type="submit" value="Order By" />
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ApplicationUserID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Counter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.NumOfLikes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lng)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.categoryID)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Counter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Text)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.NumOfLikes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lng)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.categoryID)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a>

                    @if (User.Identity.IsAuthenticated)
                    {
                        @if (User.IsInRole("Admin"))
                        {


                            <a asp-action="Edit" asp-route-id="@item.ID"> Edit </a>
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        }
                    }
                </td>
            </tr>
        }



    </tbody>
</table>

<h3 id="h33">h333</h3>
<script>
$.get("/ProductTags/getJson10MostUsedTags", {}, function (data) {
    console.log(data);
    start(data, "#mostusedcategories");
}, "json").done(function () {
}).fail(function (data, textStatus, xhr) {
    //This shows status code eg. 403
    console.log("error", data.status);
    console.log(data);
    console.log(xhr);
    console.log(textStatus);
    //This shows status message eg. Forbidden
    console.log("STATUS: " + xhr);
}).always(function () {
    //TO-DO after fail/done request.
});
    </script>


<meta charset="utf-8">
<style>

    body {
        font: 10px sans-serif;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .bar {
        fill: orange;
    }

        .bar:hover {
            fill: orangered;
        }

    .x.axis path {
        display: none;
    }

    .d3-tip {
        line-height: 1;
        font-weight: bold;
        padding: 12px;
        background: rgba(0, 0, 0, 0.8);
        color: #fff;
        border-radius: 2px;
    }

        /* Creates a small triangle extender for the tooltip */
        .d3-tip:after {
            box-sizing: border-box;
            display: inline;
            font-size: 10px;
            width: 100%;
            line-height: 1;
            color: rgba(0, 0, 0, 0.8);
            content: "\25BC";
            position: absolute;
            text-align: center;
        }

        /* Style northward tooltips differently */
        .d3-tip.n:after {
            margin: -1px 0 0 0;
            top: 100%;
            left: 0;
        }
</style>

    @*<script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>*@
    <script src="https://d3js.org/d3.v4.min.js"></script>

<script>d3.select('h3').style('color', 'red');</script>
<script>


 var margin = {top: 40, right: 20, bottom: 30, left: 40 },
         width = 960 - margin.left - margin.right,
         height = 500 - margin.top - margin.bottom;

     var formatPercent = d3.format(".0%");

     var x = d3.scale.ordinal()
         .rangeRoundBands([0, width], .1);

     var y = d3.scale.linear()
         .range([height, 0]);

     var xAxis = d3.svg.axis()
         .scale(x)
         .orient("bottom");

     var yAxis = d3.svg.axis()
         .scale(y)
         .orient("left")
         .tickFormat(formatPercent);

     var tip = d3.tip()
         .attr('class', 'd3-tip')
         .offset([-10, 0])
     .html(function (d) {
         return "<strong>Count:</strong> <span style='color:red'>" + d.Count + "</span>";
 })

var svg = d3.select("body").append("svg")
 .attr("width", width + margin.left + margin.right)
 .attr("height", height + margin.top + margin.bottom)
 .append("g")
 .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.call(tip);

 d3.tsv("data.tsv", type, function (error, data) {
         x.domain(data.map(function (d) { return d.Name; }));
     y.domain([0, d3.max(data, function (d) { return d.Count; })]);

     svg.append("g")
         .attr("class", "x axis")
         .attr("transform", "translate(0," + height + ")")
         .call(xAxis);

     svg.append("g")
         .attr("class", "y axis")
         .call(yAxis)
         .append("text")
         .attr("transform", "rotate(-90)")
         .attr("y", 6)
         .attr("dy", ".71em")
         .style("text-anchor", "end")
         .text("Count");

     svg.selectAll(".bar")
         .data(data)
         .enter().append("rect")
         .attr("class", "bar")
         .attr("x", function (d) { return x(d.Name); })
     .attr("width", x.rangeBand())
         .attr("y", function (d) { return y(d.Count); })
         .attr("height", function (d) { return height - y(d.Count); })
     .on('mouseover', tip.show)
     .on('mouseout', tip.hide)

});

 function type(d) {
         d.Count += d.Count;
     return d;
 }

</script>
@*
    <p >D3Graph</p>
    <svg width="960" height="500"></svg>
    <script>
        d3.select('p').text("dddddddd").style('color', 'blue');
        // d3.selectall();
        $(documant).ready(function () {
            $ajax.({
                type: "GET",
                url: "/Post/Author Name",
                success: function (result) {
                    div = document.getElementById("Author Name");
                    tmp = ""
                    for (var i = 0; i < result.length; i++) {
                        var disabled = (result[i] == currentCategory) ? "disabled" : "/**/"
                        console.log(result[i], disabled);
                        var tmp = $("<a></a>", {
                            text: result[i],
                            "id": result[i],
                            "class":"btn btn-info"+disabled,
                            "role": "button",
                            "href": herf + result[i],


                        }).appendTo(div)

                    }
                },
                error: function (response) {alert('error')}

            })


        });


    </script>*@



